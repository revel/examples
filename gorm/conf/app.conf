################################################################################
# Revel configuration file
# More info at http://revel.github.io/manual/appconf.html
################################################################################

# Sets the `AppName` variable which can be used in your code as
#   `if revel.AppName {...}`
app.name = gorm

# A secret string which is passed to cryptographically sign the cookie to prevent
# (and detect) user modification.
# Keep this string secret or users will be able to inject arbitrary cookie values
# into your application
app.secret = PtWg2NlJm4CRbjxB67F6cN1aC6EqGYgkU3CS54s3hbGZnpgW5ICy3fre4SsxILlU

# Revel running behind proxy like nginx, haproxy, etc
app.behind.proxy = false
myapp.remote.enabled = true

# Database config
# 	gorm.autoinit = true # mysql, postgres, sqlite3
gorm.driver=sqlite3 # mysql, postgres, sqlite3
gorm.host=/tmp/dbtest.db  # Use dbhost  /tmp/gorm.db is your driver is sqlite
gorm.name=test
gorm.password=test
gorm.user=test



# The IP address on which to listen.
http.addr =

# The port on which to listen.
http.port = 9000

# Whether to use SSL or not.
http.ssl = false

# Path to an X509 certificate file, if using SSL.
#http.sslcert =

# Path to an X509 certificate key, if using SSL.
#http.sslkey =


# Timeout specifies a time limit for request (in seconds) made by a single client.
# A Timeout of zero means no timeout.
http.timeout.read = 90
http.timeout.write = 60


# For any cookies set by Revel (Session,Flash,Error) these properties will set
# the fields of:
# http://golang.org/pkg/net/http/#Cookie
#
# Each cookie set by Revel is prefixed with this string.
cookie.prefix = REVEL

# A secure cookie has the secure attribute enabled and is only used via HTTPS,
# ensuring that the cookie is always encrypted when transmitting from client to
# server. This makes the cookie less likely to be exposed to cookie theft via
# eavesdropping.
#
# Defaults to false. If 'http.ssl' is enabled, this will be defaulted to true.
# This should only be true when Revel is handling SSL connections. If you are
# using a proxy in front of revel (Nginx, Apache, etc), then this should be left
# as false.
# cookie.secure = false

# Limit cookie access to a given domain
#cookie.domain =

# Define when your session cookie expires. Possible values:
# "720h"
#   A time duration (http://golang.org/pkg/time/#ParseDuration) after which
#   the cookie expires and the session is invalid.
# "session"
#   Sets a session cookie which invalidates the session when the user close
#   the browser.
session.expires = 720h


# The date format used by Revel. Possible formats defined by the Go `time`
# package (http://golang.org/pkg/time/#Parse)
format.date     = 2006-01-02
format.datetime = 2006-01-02 15:04


# Determines whether the template rendering should use chunked encoding.
# Chunked encoding can decrease the time to first byte on the client side by
# sending data before the entire template has been fully rendered.
results.chunked = false


# Prefixes for each log message line
# User can override these prefix values within any section
# For e.g: [dev], [prod], etc
log.trace.prefix = "TRACE "
log.info.prefix  = "INFO  "
log.warn.prefix  = "WARN  "
log.error.prefix = "ERROR "


# The default language of this application.
i18n.default_language = en

# The default format when message is missing.
# The original message shows in %s
#i18n.unknown_format = "??? %s ???"


# Module to serve static content such as CSS, JavaScript and Media files
# Allows Routes like this:
#  `Static.ServeModule("modulename","public")`
module.static=github.com/revel/modules/static



################################################################################
# Section: dev
# This section is evaluated when running Revel in dev mode. Like so:
#   `revel run path/to/myapp`
[dev]
# This sets `DevMode` variable to `true` which can be used in your code as
#   `if revel.DevMode {...}`
#   or in your templates with
#   `<no value>`
mode.dev = true


# Pretty print JSON/XML when calling RenderJSON/RenderXML
results.pretty = true


# Automatically watches your applicaton files and recompiles on-demand
watch = true


# If you set watch.mode = "eager", the server starts to recompile
# your application every time your application's files change.
watch.mode = "normal"

# Watch the entire $GOPATH for code changes. Default is false.
#watch.gopath = true


# Module to run code tests in the browser
# See:
#   http://revel.github.io/manual/testing.html
module.testrunner = github.com/revel/modules/testrunner


module.gorm= github.com/revel/modules/gorm

# Where to log the various Revel logs
log.trace.output = off
log.info.output  = stderr
log.warn.output  = stderr
log.error.output = stderr


# Revel log flags. Possible flags defined by the Go `log` package,
# please refer https://golang.org/pkg/log/#pkg-constants
# Go log is "Bits or'ed together to control what's printed"
# Examples:
#   0  => just log the message, turn off the flags
#   3  => log.LstdFlags (log.Ldate|log.Ltime)
#   19 => log.Ldate|log.Ltime|log.Lshortfile
#   23 => log.Ldate|log.Ltime|log.Lmicroseconds|log.Lshortfile
log.trace.flags = 19
log.info.flags  = 19
log.warn.flags  = 19
log.error.flags = 19


# Revel request access log
# Access log line format:
# RequestStartTime ClientIP ResponseStatus RequestLatency HTTPMethod URLPath
# Sample format:
# 2016/05/25 17:46:37.112 127.0.0.1 200  270.157µs GET /
log.request.output = stderr


################################################################################
# Section: prod
# This section is evaluated when running Revel in production mode. Like so:
#   `revel run path/to/myapp prod`
# See:
#  [dev] section for documentation of the various settings
[prod]
mode.dev = false


results.pretty = false


watch = false


module.testrunner =


log.trace.output = off
log.info.output  = off
log.warn.output  = log/%(app.name)s.log
log.error.output = log/%(app.name)s.log

# Revel log flags. Possible flags defined by the Go `log` package,
# please refer https://golang.org/pkg/log/#pkg-constants
# Go log is "Bits or'ed together to control what's printed"
# Examples:
#   0  => just log the message, turn off the flags
#   3  => log.LstdFlags (log.Ldate|log.Ltime)
#   19 => log.Ldate|log.Ltime|log.Lshortfile
#   23 => log.Ldate|log.Ltime|log.Lmicroseconds|log.Lshortfile
log.trace.flags = 3
log.info.flags  = 3
log.warn.flags  = 3
log.error.flags = 3


# Revel request access log
# Access log line format:
# RequestStartTime ClientIP ResponseStatus RequestLatency HTTPMethod URLPath
# Sample format:
# 2016/05/25 17:46:37.112 127.0.0.1 200  270.157µs GET /
# Example:
#   log.request.output = %(app.name)s-request.log
log.request.output = off
